Drag is only applied when acceleration is zero
Therefore we cannot use the the drag to calculate the effect of the drift
Instead, all forces will be collected as vectors and then added together for a final sum

Camera follows angle of velocity so the car angle will change on screen and the camera rotation won't be as drastic


Drag
Inertia
Turn rate
  turnRateStatic (turn rate while gripping)
  turnRateDynamic (turn rate while drifting)
Grip
  gripStatic (friction while gripping)
  gripDynamic (friction while drifting)
Drift constant
Velocity
Angular velocity
Mass
Acceleration
isDrifting (is loose, behavior will change)



Arcade.Body
angle (direction of velocity in radians)

GameObjects.Shape (or image)
rotation (direction of the game object in radians)



michaelruppe car.js
turning rotates the angle of the car

this.v        velocity of car
this.angle    angle car is facing



No Acceleration
  Tiers of speed
    instant drift
    delayed drift
    more delayed drift
    more delayed drift
    more delayed drift
    no drift


POWERSLIDING
when not loose, accumulate a count of how long a turn is being held, then compare that count to the speed of the car
once past the threshold, set the car to loose

Turning angles:
Car currently turns too much at very low speeds and then comes to a sudden stop, it should be more gradual
Implement tiers or a formula


When speeds are low, come up with a formula to set the camera between the car angle and the car's velocity
  Within this set range, the lowest value is the car angle and the highest value is the velocity angle
  Below and above this range, the values are absolute (how it already exists)